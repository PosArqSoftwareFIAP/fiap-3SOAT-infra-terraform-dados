name: Deploy on Merge to Main

on:
  push:
    branches:
      - main

permissions: write-all

jobs:

  terraformDeploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.0

      - name: Read .yml file
        id: read-yml
        run: |
          value=$(yq e '.destroy' destroy.yml)
          echo "destroy=$value" >> $GITHUB_ENV


      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}



      - name: Create do token
        run: echo -e "\nlocals {\n\tdo_token=\"${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}\"\n}" > env_locals.tf
          
      - name: Terraform Init
        run: terraform init

      - name: Set Terraform  & Pass User
        run: |
          echo "locals {username=secrets.USERNAME_DB}" >> $GITHUB_ENV
          echo "locals {password_db =secrets.PASSWORD_DB}" >> $GITHUB_ENV

      - name: Terraform Plan
        run: |
            if [ "${{ env.destroy }}" == "false" ]; then
              terraform plan -var-file="execution.tfvars"  
            # elif [ "${{ env.destroy }}" == "true" ]; then
            #   terraform plan -destroy
            # else
            #   echo "Action not recognized. No Terraform action taken."
            fi
        # run: terraform plan -var-file="execution.tfvars"
        
      - name: Terraform Apply
        
        run: |
            if [ "${{ env.destroy }}" == "false" ]; then
              terraform apply -var-file="execution.tfvars" -auto-approve  
              echo "Rodando o apply"
            else
              echo "Action not recognized. No Terraform action taken."
            fi
        # run: terraform apply -var-file="execution.tfvars" -auto-approve


      - name: Terraform destroy
        
        run: |
            if [ "${{ env.destroy }}" == "true" ]; then
              terraform destroy -auto-approve  -refresh=false
              echo "Rodando o apply"
            else
              echo "Action not recognized. No Terraform action taken."
            fi
        # run: terraform apply -var-file="execution.tfvars" -auto-approve